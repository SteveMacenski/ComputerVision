% The part you have to modify
net.layers = {} ;

% 1 conv1
net.layers{end+1} = struct('type', 'conv', ...
                           'weights',{{ net_first.layers{1}.weights{1},net_first.layers{1}.weights{2}}},... %{{1e-4*randn(5,5,3,32, 'single'), zeros(1, 32, 'single')}}, ...
                           'learningRate',[1,2],...
                           'dilate', 1, ...
                           'stride', 1, ...
                           'pad', 2,...
                           'opts',{{}}) ;
% 2 relu1              
net.layers{end+1} = struct('type', 'relu','leak',0) ;

% 3 pool1 (max pool)
net.layers{end+1} = struct('type', 'pool', ...
                           'method', 'max', ...
                           'pool', [5 5], ...
                           'stride', 2, ...
                           'pad', [0 1 0 1],...
                           'opts',{{}}) ;

% 4 conv2
net.layers{end+1} = struct('type', 'conv', ...
                           'weights', {{net_first.layers{4}.weights{1},net_first.layers{4}.weights{2} }},... %{{0.01*randn(7,7,32,32, 'single'), zeros(1, 32, 'single')}}, ...
                           'learningRate',[1,2],...
                           'dilate', 1, ...
                           'stride', 1, ...
                           'pad', 0,...
                           'opts',{{}}) ;

% 5 relu2
net.layers{end+1} = struct('type', 'relu','leak',0) ;

% 6 pool2 (avg pool)
net.layers{end+1} = struct('type', 'pool', ...
                           'method', 'avg', ...
                           'pool', [2 2], ...
                           'stride', 2, ...
                           'pad', [0 1 0 1],...
                           'opts',{{}}) ; 
                      
                       
 % 7 conv3
net.layers{end+1} = struct('type', 'conv', ...
                           'weights', {{net_first.layers{7}.weights{1},net_first.layers{7}.weights{2} }},... %{{0.01*randn(3,3,32,32, 'single'), zeros(1, 32, 'single')}}, ...
                           'learningRate',[1,2],...
                           'dilate', 1, ...
                           'stride', 1, ...
                           'pad', 0,...
                           'opts',{{}}) ;

% 8 relu3
net.layers{end+1} = struct('type', 'relu','leak',0) ;

% 9 pool3 (avg pool)
net.layers{end+1} = struct('type', 'pool', ...
                           'method', 'avg', ...
                           'pool', [2 2], ...
                           'stride', 2, ...
                           'pad', [0 1 0 1],...
                           'opts',{{}}) ; 
                                            
% 10 conv4
net.layers{end+1} = struct('type', 'conv', ...
                           'weights', {{net_first.layers{10}.weights{1},net_first.layers{10}.weights{2} }},... %{{0.1*randn(2,2,32,100, 'single'), zeros(1, 100, 'single')}}, ...
                           'learningRate',[1,2],...
                           'dilate', 1, ...
                           'stride', 1, ...
                           'pad', 0,...
                           'opts',{{}}) ;
% 11 loss
net.layers{end+1} = struct('type', 'softmaxloss') ;